cmake_minimum_required(VERSION 3.5)
project(carnavi_lidar)

# Default to C++14
if(NOT CMAKE_CXX_STANDARD)
  set(CMAKE_CXX_STANDARD 14)
endif()

if(CMAKE_COMPILER_IS_GNUCXX OR CMAKE_CXX_COMPILER_ID MATCHES "Clang")
  add_compile_options(-Wall -Wextra -Wpedantic)
endif()

include_directories(
  include
  include/${PROJECT_NAME}
)

# find dependencies
find_package(ament_cmake REQUIRED)
find_package(rclcpp REQUIRED)
find_package(std_msgs REQUIRED)
find_package(sensor_msgs REQUIRED)
add_executable(carnavi_lidar_node
  src/main.cpp
  src/carnavi_lidar/lidar_manager.cpp
  src/carnavi_lidar/lidar_setting.cpp
  src/carnavi_lidar/lidar_receiver.cpp 
)
ament_target_dependencies(carnavi_lidar_node rcl rclcpp std_msgs sensor_msgs)

install(TARGETS
  carnavi_lidar_node
  DESTINATION lib/${PROJECT_NAME}
)

install(DIRECTORY
	launch
	DESTINATION share/${PROJECT_NAME}
)
install(DIRECTORY 
  param
  DESTINATION share/${PROJECT_NAME}
)

ament_package()