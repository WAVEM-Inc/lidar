#include "sick_scan/sick_scan_base.h" /* Base definitions included in all header files, added by add_sick_scan_base_header.py. Do not edit this line. */
// Generated by gencpp from file sick_scan/SickLocSetAutoStartSavePoseIntervalSrv.msg
// DO NOT EDIT!


#ifndef SICK_SCAN_MESSAGE_SICKLOCSETAUTOSTARTSAVEPOSEINTERVALSRV_H
#define SICK_SCAN_MESSAGE_SICKLOCSETAUTOSTARTSAVEPOSEINTERVALSRV_H

#include <ros/service_traits.h>


#include <sick_scan/SickLocSetAutoStartSavePoseIntervalSrvRequest.h>
#include <sick_scan/SickLocSetAutoStartSavePoseIntervalSrvResponse.h>


namespace sick_scan
{

struct SickLocSetAutoStartSavePoseIntervalSrv
{

typedef SickLocSetAutoStartSavePoseIntervalSrvRequest Request;
typedef SickLocSetAutoStartSavePoseIntervalSrvResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct SickLocSetAutoStartSavePoseIntervalSrv
} // namespace sick_scan


namespace roswrap
{
namespace service_traits
{


template<>
struct MD5Sum< ::sick_scan::SickLocSetAutoStartSavePoseIntervalSrv > {
  static const char* value()
  {
    return "ad39c32b7113ffa6f720df5790fde764";
  }

  static const char* value(const ::sick_scan::SickLocSetAutoStartSavePoseIntervalSrv&) { return value(); }
};

template<>
struct DataType< ::sick_scan::SickLocSetAutoStartSavePoseIntervalSrv > {
  static const char* value()
  {
    return "sick_scan/SickLocSetAutoStartSavePoseIntervalSrv";
  }

  static const char* value(const ::sick_scan::SickLocSetAutoStartSavePoseIntervalSrv&) { return value(); }
};


// service_traits::MD5Sum< ::sick_scan::SickLocSetAutoStartSavePoseIntervalSrvRequest> should match
// service_traits::MD5Sum< ::sick_scan::SickLocSetAutoStartSavePoseIntervalSrv >
template<>
struct MD5Sum< ::sick_scan::SickLocSetAutoStartSavePoseIntervalSrvRequest>
{
  static const char* value()
  {
    return MD5Sum< ::sick_scan::SickLocSetAutoStartSavePoseIntervalSrv >::value();
  }
  static const char* value(const ::sick_scan::SickLocSetAutoStartSavePoseIntervalSrvRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::sick_scan::SickLocSetAutoStartSavePoseIntervalSrvRequest> should match
// service_traits::DataType< ::sick_scan::SickLocSetAutoStartSavePoseIntervalSrv >
template<>
struct DataType< ::sick_scan::SickLocSetAutoStartSavePoseIntervalSrvRequest>
{
  static const char* value()
  {
    return DataType< ::sick_scan::SickLocSetAutoStartSavePoseIntervalSrv >::value();
  }
  static const char* value(const ::sick_scan::SickLocSetAutoStartSavePoseIntervalSrvRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::sick_scan::SickLocSetAutoStartSavePoseIntervalSrvResponse> should match
// service_traits::MD5Sum< ::sick_scan::SickLocSetAutoStartSavePoseIntervalSrv >
template<>
struct MD5Sum< ::sick_scan::SickLocSetAutoStartSavePoseIntervalSrvResponse>
{
  static const char* value()
  {
    return MD5Sum< ::sick_scan::SickLocSetAutoStartSavePoseIntervalSrv >::value();
  }
  static const char* value(const ::sick_scan::SickLocSetAutoStartSavePoseIntervalSrvResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::sick_scan::SickLocSetAutoStartSavePoseIntervalSrvResponse> should match
// service_traits::DataType< ::sick_scan::SickLocSetAutoStartSavePoseIntervalSrv >
template<>
struct DataType< ::sick_scan::SickLocSetAutoStartSavePoseIntervalSrvResponse>
{
  static const char* value()
  {
    return DataType< ::sick_scan::SickLocSetAutoStartSavePoseIntervalSrv >::value();
  }
  static const char* value(const ::sick_scan::SickLocSetAutoStartSavePoseIntervalSrvResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace roswrap

#endif // SICK_SCAN_MESSAGE_SICKLOCSETAUTOSTARTSAVEPOSEINTERVALSRV_H
