#include "sick_scan/sick_scan_base.h" /* Base definitions included in all header files, added by add_sick_scan_base_header.py. Do not edit this line. */
// Generated by gencpp from file sick_scan/SickGetSoftwareVersionSrv.msg
// DO NOT EDIT!


#ifndef SICK_SCAN_MESSAGE_SICKGETSOFTWAREVERSIONSRV_H
#define SICK_SCAN_MESSAGE_SICKGETSOFTWAREVERSIONSRV_H

#include <ros/service_traits.h>


#include <sick_scan/SickGetSoftwareVersionSrvRequest.h>
#include <sick_scan/SickGetSoftwareVersionSrvResponse.h>


namespace sick_scan
{

struct SickGetSoftwareVersionSrv
{

typedef SickGetSoftwareVersionSrvRequest Request;
typedef SickGetSoftwareVersionSrvResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct SickGetSoftwareVersionSrv
} // namespace sick_scan


namespace roswrap
{
namespace service_traits
{


template<>
struct MD5Sum< ::sick_scan::SickGetSoftwareVersionSrv > {
  static const char* value()
  {
    return "100332dc23a0380d220694dccac63ae2";
  }

  static const char* value(const ::sick_scan::SickGetSoftwareVersionSrv&) { return value(); }
};

template<>
struct DataType< ::sick_scan::SickGetSoftwareVersionSrv > {
  static const char* value()
  {
    return "sick_scan/SickGetSoftwareVersionSrv";
  }

  static const char* value(const ::sick_scan::SickGetSoftwareVersionSrv&) { return value(); }
};


// service_traits::MD5Sum< ::sick_scan::SickGetSoftwareVersionSrvRequest> should match
// service_traits::MD5Sum< ::sick_scan::SickGetSoftwareVersionSrv >
template<>
struct MD5Sum< ::sick_scan::SickGetSoftwareVersionSrvRequest>
{
  static const char* value()
  {
    return MD5Sum< ::sick_scan::SickGetSoftwareVersionSrv >::value();
  }
  static const char* value(const ::sick_scan::SickGetSoftwareVersionSrvRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::sick_scan::SickGetSoftwareVersionSrvRequest> should match
// service_traits::DataType< ::sick_scan::SickGetSoftwareVersionSrv >
template<>
struct DataType< ::sick_scan::SickGetSoftwareVersionSrvRequest>
{
  static const char* value()
  {
    return DataType< ::sick_scan::SickGetSoftwareVersionSrv >::value();
  }
  static const char* value(const ::sick_scan::SickGetSoftwareVersionSrvRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::sick_scan::SickGetSoftwareVersionSrvResponse> should match
// service_traits::MD5Sum< ::sick_scan::SickGetSoftwareVersionSrv >
template<>
struct MD5Sum< ::sick_scan::SickGetSoftwareVersionSrvResponse>
{
  static const char* value()
  {
    return MD5Sum< ::sick_scan::SickGetSoftwareVersionSrv >::value();
  }
  static const char* value(const ::sick_scan::SickGetSoftwareVersionSrvResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::sick_scan::SickGetSoftwareVersionSrvResponse> should match
// service_traits::DataType< ::sick_scan::SickGetSoftwareVersionSrv >
template<>
struct DataType< ::sick_scan::SickGetSoftwareVersionSrvResponse>
{
  static const char* value()
  {
    return DataType< ::sick_scan::SickGetSoftwareVersionSrv >::value();
  }
  static const char* value(const ::sick_scan::SickGetSoftwareVersionSrvResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace roswrap

#endif // SICK_SCAN_MESSAGE_SICKGETSOFTWAREVERSIONSRV_H
